import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.LinkedHashMap;
import java.io.*;
import java.util.NoSuchElementException;

public class WordStat {
    public static void main(String[] args) {

        LinkedHashMap<String, Integer> lhm = new LinkedHashMap<String, Integer>();
        StringBuilder chr = new StringBuilder();

        try {
            Reader reader = new BufferedReader(new InputStreamReader(new FileInputStream(args[0]), "UTF8"));
            try {
                BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(args[1]), "UTF8"));
                try {
                    char[] buffer = new char[128];
                    int read = reader.read(buffer);

                    while (read > -1) {
                        String s = new String(buffer, 0, read);

                        for (int i = 0; i < s.length(); i++) {
                            if (IsChar(s.charAt(i))) {
                                chr.append(s.charAt(i));
                            } else {
                                String s1 = chr.toString().toLowerCase();
                                if (s1.isEmpty()) {
                                    continue;
                                }
                                lhm.merge(s1, 1, Integer::sum);
                                chr.setLength(0);
                            }

                        }
                        read = reader.read(buffer);
                    }

                    String s1 = chr.toString().toLowerCase();
                    if (!(s1.isEmpty())) {
                        lhm.merge(s1, 1, Integer::sum);
                    }
                    chr.setLength(0);

                } finally {
                    for (String key : lhm.keySet()) {
                        writer.write(key + " " + Integer.toString(lhm.get(key)));
                        writer.newLine();
                    }
                    writer.close();
                }
            } finally {
                reader.close();
            }
        } catch (FileNotFoundException e) {
            System.err.println("Input file not found: " + e.getMessage());
        } catch (IOException e) {
            System.err.println("IOException: " + e.getMessage());
        }
    }

    public static boolean IsChar(char c) {
        return Character.isLetter(c) || c == '\'' || Character.getType(c) == Character.DASH_PUNCTUATION;
    }
}


// linkedHashmap
